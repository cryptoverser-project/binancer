% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binance_trades.R
\name{binance_trades}
\alias{binance_trades}
\title{Retrieve Aggregated Historical Trades}
\usage{
binance_trades(pair, api = "spot", from, to, quiet = FALSE)
}
\arguments{
\item{pair}{Character, specifying the trading pair of interest, e.g., "BTCUSDT".}

\item{api}{Character, indicating the reference API. Available options are:
\itemize{
\item "spot": For \href{https://binance-docs.github.io/apidocs/spot/en/#recent-trades-list}{Spot API}.
\item "fapi": For \href{https://binance-docs.github.io/apidocs/futures/en/#recent-trades-list}{Futures USD-M API}.
\item "dapi": For \href{https://binance-docs.github.io/apidocs/delivery/en/#recent-trades-list}{Futures Coin-M API}.
\item "eapi": For \href{https://binance-docs.github.io/apidocs/voptions/en/#recent-trades-list}{Options API}.
}}

\item{from}{Character, specifying the start date for historical trades data. Use NULL to indicate no specific start date.}

\item{to}{Character, specifying the end date for historical trades data. Use NULL to indicate no specific end date.}

\item{quiet}{Logical, indicating whether to suppress console messages. Default is FALSE.}
}
\value{
A tibble (data frame) object containing aggregated historical trades data for the selected trading pair within the specified date range.
}
\description{
Get aggregated historical trades data for a specified trading pair from the selected reference API.
}
\examples{

# Example: Retrieve the last 10 minutes of trades for BTCUSDT from the Spot API.
binance_trades(pair = "BTCUSDT", api = "spot", from = NULL, to = NULL)

# Example: Retrieve the last 10 minutes of trades for BTCUSDT from the Futures USD-M API.
binance_trades(pair = "BTCUSDT", api = "fapi", from = NULL, to = NULL)

# Example: Retrieve the last 10 minutes of trades for BTCUSD_PERP from the Futures Coin-M API.
binance_trades(pair = "BTCUSD_PERP", api = "dapi", from = NULL, to = NULL)

# Example: Retrieve trades for LAZIOUSDT within a specific date range from the Spot API.
binance_trades(pair = "LAZIOUSDT", api = "spot", from = "2023-01-01", to = "2023-01-02")

}
