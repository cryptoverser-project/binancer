% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binance_trades.R
\name{binance_trades}
\alias{binance_trades}
\title{Retrieve Aggregated Historical Trades}
\usage{
binance_trades(pair, api, from, to, quiet = FALSE)
}
\arguments{
\item{pair}{Character, trading pair, e.g. "BTCUSDT".}

\item{api}{Character, reference API. Available options are:
\itemize{
\item "spot": For \href{https://binance-docs.github.io/apidocs/spot/en/#recent-trades-list}{Spot API}.
\item "fapi": For \href{https://binance-docs.github.io/apidocs/futures/en/#recent-trades-list}{Futures USD-m API}.
\item "dapi": For \href{https://binance-docs.github.io/apidocs/delivery/en/#recent-trades-list}{Futures COIN-m API}.
\item "eapi": For \href{https://binance-docs.github.io/apidocs/voptions/en/#recent-trades-list}{Options API}.
}}

\item{from}{Character or an object of class \code{"\link[=POSIXt-class]{POSIXt}"}, the start time for historical data.
Default is \code{NULL} and will be used as start date \code{Sys.time()-lubridate::minutes(10)}.}

\item{to}{Character or an object of class \code{"\link[=POSIXt-class]{POSIXt}"}, the end time for historical data.
Default is \code{NULL} and will be used as end date \code{Sys.time()}.}

\item{quiet}{Logical, if \code{TRUE} suppress informational and warnings. Default is \code{FALSE}.}
}
\value{
A tibble with 9 columns:
\itemize{
\item \code{date}: Datetime, trade execution date.
\item \code{market}: Character, selected API.
\item \code{pair}: Character, selected pair.
\item \code{price}: Numeric, trade price.
\item \code{quantity}: Numeric, trade quantity.
\item \code{side}: Character, trade side. Can be "SELL" or "BUY".
\item \code{agg_id}: Integer, aggregated trade Id.
\item \code{first_id}: Integer, first trade Id for aggregation.
\item \code{last_id}: Integer, last trade Id for aggregation.
}
}
\description{
Get aggregated historical trades data for a specified trading pair from the selected reference API.
}
\examples{

# Retrieve the last 10 minutes of trades for BTCUSDT in Spot market
binance_trades(pair = "BTCUSDT", api = "spot", from = NULL, to = NULL)

# Get trades for LAZIOUSDT in a date range in Spot market.
binance_trades(pair = "LAZIOUSDT", api = "spot", from = "2023-01-01", to = "2023-01-02")

# Get the last 10 minutes of trades for BTCUSDT in USD-M market
binance_trades(pair = "BTCUSDT", api = "fapi", from = NULL, to = NULL)

# Get last 10 minutes of trades for BTCUSD_PERP in Coin-M market.
binance_trades(pair = "BTCUSD_PERP", api = "dapi", from = NULL, to = NULL)

}
